name: "Copilot Setup Steps"

# Allow testing of the setup steps from your repository's "Actions" tab.
on: workflow_dispatch

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Create .dev.vars for E2E tests
        run: |
          echo "ENVIRONMENT=copilot" > .dev.vars
          echo "CLERK_SECRET_KEY=${{secrets.CLERK_SECRET_KEY}}" >> .dev.vars
          echo "CLERK_PUBLISHABLE_KEY=${{secrets.CLERK_PUBLISHABLE_KEY}}" >> .dev.vars

          echo "CLERK_SECRET_KEY=${{secrets.CLERK_SECRET_KEY}}" > .env
          echo "CLERK_PUBLISHABLE_KEY=${{secrets.CLERK_PUBLISHABLE_KEY}}" >> .env
          echo "VITE_CLERK_PUBLISHABLE_KEY=${{secrets.CLERK_PUBLISHABLE_KEY}}" >> .env
          echo "E2E_CLERK_USER_USERNAME=${{secrets.E2E_CLERK_USER_USERNAME}}" >> .env
          echo "E2E_CLERK_USER_PASSWORD=${{secrets.E2E_CLERK_USER_PASSWORD}}" >> .env
