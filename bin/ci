#!/usr/bin/env bash

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_step() {
    gum style --foreground 212 --border thick --padding "0 4" --width $(($(tput cols) / 2)) "$1"
}

print_success() {
    echo -e "${GREEN}âœ“ $1${NC}"
}

print_error() {
    echo -e "${RED}âœ— $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}âš  $1${NC}"
}

# Function to run a step and track time
run_step() {
    local command="$1"
    local step_name="$2"

    print_step "$step_name"

    local start_time=$(date +%s)

    if eval "$command"; then
        local end_time=$(date +%s)
        local duration=$((end_time - start_time))
        print_success "$step_name completed in ${duration}s"
        return 0
    else
        local end_time=$(date +%s)
        local duration=$((end_time - start_time))
        print_error "$step_name failed after ${duration}s"
        return 1
    fi
}

main() {
    echo -e "${BLUE}ðŸš€ Running Local CI Pipeline${NC}"
    echo -e "${BLUE}====================${NC}"

    local total_start_time=$(date +%s)

    run_step "npm run cf-typegen"             "Generate worker types"  || exit 1
    run_step "npm run generate"               "Generate Prisma Client" || exit 1
    run_step "npx tsc --noEmit"               "TypeScript Check"       || exit 1
    run_step "npm run lint -- --fix"          "ESLint"                 || exit 1
    run_step "npm run test"                   "Unit Tests"             || exit 1
    run_step "npm run test:e2e"               "Integration Tests"      || exit 1
    run_step "npm run build"                  "Build"                  || exit 1
    run_step "npx wrangler deploy --dry-run"  "Deploy Dry Run"         || exit 1

    local total_end_time=$(date +%s)
    local total_duration=$((total_end_time - total_start_time))

    echo -e "\n${GREEN}ðŸŽ‰ All CI checks passed!${NC}"
    echo -e "${GREEN}Total time: ${total_duration}s${NC}"
}

main "$@"
